FUNCTION_BLOCK fuzzy

VAR_INPUT
    cpu_clock_speed_ghz : REAL;
    cpu_core_count : REAL;
    cpu_thread_count : REAL;
    gpu_vram_size_gb : REAL;
    gpu_clock_speed_mhz : REAL;
    power_supply_watts : REAL;
    ram_size_gb : REAL;
    ram_speed_mhz : REAL;
    storage_capacity_gb : REAL;
END_VAR

VAR_OUTPUT
    development : REAL;
    video_games : REAL;
    crypto : REAL;
    hosting : REAL;
    home : REAL;
    business : REAL;
END_VAR

FUZZIFY cpu_clock_speed_ghz
    TERM awful := (0, 1) (1, 1) (1.5, 0);
    TERM bad := (1.5, 0) (2.0, 1) (2.3, 0);
    TERM average := (2.3, 0) (2.6, 1) (3.0, 1) (3.3, 0);
    TERM good := (3.2, 0) (3.4, 1) (3.7, 1) (4.0, 0);
    TERM excellent := (3.8, 0) (5.0, 1);
END_FUZZIFY

FUZZIFY cpu_core_count
    TERM bad := (0, 0) (2, 1) (4, 0);
    TERM average := (2, 0) (4, 1) (6, 0);
    TERM good := (4, 0) (6, 1) (8, 0);
    TERM excellent := (6, 0) (8, 1);
END_FUZZIFY

FUZZIFY cpu_thread_count
    TERM bad := (0, 1) (2, 1) (4, 0);
    TERM average := (2, 0) (4, 1) (8, 0);
    TERM good := (6, 0) (12, 1) (16, 0);
    TERM excellent := (12, 0) (16, 1);
END_FUZZIFY

FUZZIFY gpu_vram_size_gb
    TERM awful := (0, 1) (2, 1) (4, 0);
    TERM bad := (4, 0) (6, 1) (8, 0);
    TERM average := (6, 0) (8, 1) (16, 0);
    TERM good := (12, 0) (16, 1) (20, 0);
    TERM excellent := (16, 0) (24, 1);
END_FUZZIFY

FUZZIFY gpu_clock_speed_mhz
    TERM awful := (0, 1) (300, 1) (600, 0);
    TERM bad := (600, 0) (800, 1) (1000, 0);
    TERM average := (1000, 0) (1200, 1) (1600, 0);
    TERM good := (1600, 0) (1800, 1) (2000, 0);
    TERM excellent := (2200, 0) (2600, 1);
END_FUZZIFY

FUZZIFY power_supply_watts
    TERM awful := (0, 1) (100, 1) (300, 0);
    TERM bad := (300, 0) (400, 1) (500, 0);
    TERM average := (450, 0) (600, 1) (750, 0);
    TERM good := (700, 0) (800, 1) (1000, 0);
    TERM excellent := (950, 0) (1100, 1);
END_FUZZIFY

FUZZIFY ram_size_gb
    TERM awful := (0, 1) (2, 1) (4, 0);
    TERM bad := (2, 0) (4, 1) (6, 0);
    TERM average := (4, 0) (8, 1) (16, 0);
    TERM good := (12, 0) (16, 1) (32, 0);
    TERM excellent := (24, 0) (32, 1);
END_FUZZIFY

FUZZIFY ram_speed_mhz
    TERM awful := (0, 1) (400, 1) (600, 0);
    TERM bad := (600, 0) (800, 1) (1500, 0);
    TERM average := (1400, 0) (2200, 1) (2800, 0);
    TERM good := (2700, 0) (3000, 1) (3300, 0);
    TERM excellent := (3200, 0) (5000, 1);
END_FUZZIFY

FUZZIFY storage_capacity_gb
    TERM awful := (0, 1) (64, 1) (128, 0);
    TERM bad := (90, 0) (128, 1) (240, 0);
    TERM average := (160, 0) (256, 1) (500, 0);
    TERM good := (400, 0) (512, 1) (1000, 0);
    TERM excellent := (1000, 0) (2000, 1);
END_FUZZIFY

DEFUZZIFY development
    TERM awful := (0, 1) (15, 1) (25, 0);
    TERM bad := (15, 0) (25, 1) (45, 0);
    TERM average := (35, 0) (55, 1) (65, 0);
    TERM good := (60, 0) (75, 1) (85, 0);
    TERM excellent := (80, 0) (90, 1) (100, 1);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY video_games
    TERM awful := (0, 1) (15, 1) (25, 0);
    TERM bad := (15, 0) (25, 1) (45, 0);
    TERM average := (35, 0) (55, 1) (65, 0);
    TERM good := (60, 0) (75, 1) (85, 0);
    TERM excellent := (80, 0) (90, 1) (100, 1);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY crypto
    TERM awful := (0, 1) (15, 1) (25, 0);
    TERM bad := (15, 0) (25, 1) (45, 0);
    TERM average := (35, 0) (55, 1) (65, 0);
    TERM good := (60, 0) (75, 1) (85, 0);
    TERM excellent := (80, 0) (90, 1) (100, 1);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY hosting
    TERM awful := (0, 1) (15, 1) (25, 0);
    TERM bad := (15, 0) (25, 1) (45, 0);
    TERM average := (35, 0) (55, 1) (65, 0);
    TERM good := (60, 0) (75, 1) (85, 0);
    TERM excellent := (80, 0) (90, 1) (100, 1);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY home
    TERM awful := (0, 1) (15, 1) (25, 0);
    TERM bad := (15, 0) (25, 1) (45, 0);
    TERM average := (35, 0) (55, 1) (65, 0);
    TERM good := (60, 0) (75, 1) (85, 0);
    TERM excellent := (80, 0) (90, 1) (100, 1);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY

DEFUZZIFY business
    TERM awful := (0, 1) (15, 1) (25, 0);
    TERM bad := (15, 0) (25, 1) (45, 0);
    TERM average := (35, 0) (55, 1) (65, 0);
    TERM good := (60, 0) (75, 1) (85, 0);
    TERM excellent := (80, 0) (90, 1) (100, 1);
    METHOD : COG;
    DEFAULT := 0;
END_DEFUZZIFY


RULEBLOCK development_rules
    AND : MIN;
    ACT : MIN;
    ACCU : MAX;

     RULE 1 : IF cpu_clock_speed_ghz IS awful OR cpu_clock_speed_ghz IS bad
              THEN development IS awful;

     RULE 2 : IF cpu_clock_speed_ghz IS average
              THEN development IS bad;

     RULE 3 : IF cpu_clock_speed_ghz IS good
              THEN development IS good;

     RULE 4 : IF cpu_clock_speed_ghz IS excellent
              THEN development IS excellent;

     RULE 5 : IF cpu_core_count IS bad
              THEN development IS bad;

     RULE 6 : IF cpu_core_count IS average
              THEN development IS bad;

     RULE 7 : IF cpu_core_count IS good
              THEN development IS good;

     RULE 8 : IF cpu_core_count IS excellent
              THEN development IS excellent;

     RULE 9 : IF cpu_thread_count IS bad
              THEN development IS bad;

     RULE 10 : IF cpu_thread_count IS average
              THEN development IS average;

     RULE 11 : IF cpu_thread_count IS good
              THEN development IS good;

     RULE 12 : IF cpu_thread_count IS excellent
              THEN development IS excellent;

     RULE 13 : IF gpu_vram_size_gb IS awful
               THEN development IS bad;

     RULE 14 : IF gpu_vram_size_gb IS bad OR gpu_vram_size_gb IS excellent OR gpu_vram_size_gb IS good
               THEN development IS average;

     RULE 15 : IF gpu_vram_size_gb IS average
               THEN development IS good;

     RULE 16 : IF gpu_clock_speed_mhz IS awful
               THEN development IS bad;

     RULE 17 : IF gpu_clock_speed_mhz IS bad OR gpu_clock_speed_mhz IS good OR gpu_clock_speed_mhz IS excellent
               THEN development IS average;

     RULE 18 : IF power_supply_watts IS awful OR power_supply_watts IS bad OR power_supply_watts IS average
               THEN development IS average;

     RULE 19 : IF power_supply_watts IS excellent OR power_supply_watts IS good
               THEN development IS good;

     RULE 20 : IF ram_size_gb IS awful
               THEN development IS awful;

     RULE 21 : IF ram_size_gb IS bad
               THEN development IS bad;

     RULE 22 : IF ram_size_gb IS average
               THEN development IS bad;

     RULE 23 : IF ram_size_gb IS good
               THEN development IS good;

     RULE 24 : IF ram_size_gb IS excellent
               THEN development IS excellent;

     RULE 25 : IF ram_speed_mhz IS awful
              THEN development IS awful;

     RULE 26 : IF ram_speed_mhz IS bad
              THEN development IS bad;

     RULE 27 : IF ram_speed_mhz IS average
               THEN development IS bad;

     RULE 28 : IF ram_speed_mhz IS good
               THEN development IS good;

     RULE 29 : IF ram_speed_mhz IS excellent
               THEN development IS excellent;

     RULE 30: IF storage_capacity_gb IS awful
              THEN development IS bad;

     RULE 31: IF storage_capacity_gb IS bad
              THEN development IS average;

     RULE 32: IF storage_capacity_gb IS average OR storage_capacity_gb IS excellent OR storage_capacity_gb IS good
              THEN development IS good;

     RULE 33: IF (ram_size_gb IS awful OR ram_size_gb IS bad) AND
                 (cpu_core_count IS good OR cpu_clock_speed_ghz IS good)
              THEN development IS bad;

     RULE 34: IF (cpu_core_count IS bad OR cpu_clock_speed_ghz IS awful OR cpu_clock_speed_ghz IS bad)
              AND (ram_size_gb IS good OR ram_size_gb IS excellent)
              THEN development IS bad;

     RULE 35: IF gpu_clock_speed_mhz IS average
              THEN development is good;

     RULE 36: IF (ram_size_gb IS awful OR ram_size_gb IS bad) AND
                 (cpu_core_count IS excellent OR cpu_clock_speed_ghz IS excellent)
              THEN development IS average;


END_RULEBLOCK

RULEBLOCK crypto_rules
    AND : MIN;
    ACT : MIN;
    ACCU : MAX;

     RULE 1 : IF cpu_clock_speed_ghz IS awful OR cpu_clock_speed_ghz IS good OR cpu_clock_speed_ghz IS excellent
              THEN crypto IS bad;

     RULE 2 : IF cpu_clock_speed_ghz IS bad OR cpu_clock_speed_ghz IS average
              THEN crypto IS good;

     RULE 3 : IF cpu_core_count IS bad OR cpu_core_count IS average OR cpu_core_count IS good
              THEN crypto IS good;

     RULE 4 : IF cpu_core_count IS excellent
              THEN crypto IS bad;

     RULE 5 : IF cpu_thread_count IS bad OR cpu_thread_count IS average OR cpu_thread_count IS good
              THEN crypto IS good;

     RULE 6 : IF cpu_thread_count IS excellent
              THEN crypto IS bad;

     RULE 7 : IF gpu_vram_size_gb IS awful OR gpu_vram_size_gb IS bad
               THEN crypto IS awful;

     RULE 8 : IF gpu_vram_size_gb IS average
               THEN crypto IS bad;

     RULE 9 : IF gpu_vram_size_gb IS good
              THEN crypto IS good;

     RULE 10 : IF gpu_vram_size_gb IS excellent
               THEN crypto IS excellent;

     RULE 11 : IF gpu_clock_speed_mhz IS awful OR gpu_clock_speed_mhz IS bad
               THEN crypto IS awful;

     RULE 12 : IF gpu_clock_speed_mhz IS average
               THEN crypto IS bad;

     RULE 13 : IF gpu_clock_speed_mhz IS good
               THEN crypto IS good;

     RULE 14 : IF gpu_clock_speed_mhz IS excellent
               THEN crypto IS excellent;

     RULE 15 : IF power_supply_watts IS awful OR power_supply_watts IS bad OR power_supply_watts IS average
               THEN crypto IS awful;

     RULE 16 : IF power_supply_watts IS good
               THEN crypto IS good;

     RULE 17 : IF power_supply_watts IS excellent
               THEN crypto IS excellent;

     RULE 18 : IF ram_size_gb IS awful OR ram_size_gb IS bad
               THEN crypto IS excellent;

     RULE 19 : IF ram_size_gb IS average
               THEN crypto IS good;

     RULE 20 : IF ram_size_gb IS good OR ram_size_gb IS excellent
               THEN crypto IS average;

     RULE 21 : IF ram_speed_mhz IS awful OR ram_speed_mhz IS bad
               THEN crypto IS excellent;

     RULE 22 : IF ram_speed_mhz IS average
               THEN crypto IS good;

     RULE 23 : IF ram_speed_mhz IS good OR ram_speed_mhz IS excellent
               THEN crypto IS bad;

     RULE 24: IF storage_capacity_gb IS awful
              THEN crypto IS bad;

     RULE 25: IF storage_capacity_gb IS bad OR storage_capacity_gb IS average OR storage_capacity_gb IS good
              THEN crypto IS average;

     RULE 26: IF storage_capacity_gb IS excellent
              THEN crypto IS good;

     RULE 27: IF (gpu_vram_size_gb IS awful OR gpu_vram_size_gb IS bad OR gpu_vram_size_gb IS average) AND (power_supply_watts IS good OR power_supply_watts IS excellent)
              THEN crypto IS bad;

     RULE 28: IF (power_supply_watts IS awful OR power_supply_watts IS bad OR power_supply_watts IS average) AND (gpu_vram_size_gb IS good OR gpu_vram_size_gb IS excellent)
                   THEN crypto IS bad;

END_RULEBLOCK

RULEBLOCK video_games_rules
    AND : MIN;
    ACT : MIN;
    ACCU : MAX;

     RULE 1 : IF cpu_core_count IS bad
              THEN video_games IS awful;

     RULE 2 : IF cpu_core_count IS average
              THEN video_games IS average;

     RULE 3 : IF cpu_core_count IS good
              THEN video_games IS good;

     RULE 4 : IF cpu_core_count IS excellent
              THEN video_games IS excellent;

     RULE 5 : IF cpu_thread_count IS bad
              THEN video_games IS awful;

     RULE 6 : IF cpu_thread_count IS average
              THEN video_games IS average;

     RULE 7 : IF cpu_thread_count IS good
              THEN video_games IS good;

     RULE 8 : IF cpu_thread_count IS excellent
              THEN video_games IS excellent;

     RULE 9 : IF cpu_clock_speed_ghz IS bad
              THEN video_games IS bad;

     RULE 10 : IF cpu_clock_speed_ghz IS average
              THEN video_games IS average;

     RULE 11 : IF cpu_clock_speed_ghz IS good or cpu_clock_speed_ghz IS excellent
                   THEN video_games IS good;

     RULE 12 : IF gpu_vram_size_gb IS awful
                    THEN video_games IS awful;

     RULE 13 : IF gpu_vram_size_gb IS bad
                    THEN video_games IS bad;

     RULE 14 : IF gpu_vram_size_gb IS average
                    THEN video_games IS average;

     RULE 15 : IF gpu_vram_size_gb IS good
                    THEN video_games IS good;

     RULE 16 : IF gpu_vram_size_gb IS excellent
                    THEN video_games IS excellent;

     RULE 17 : IF ram_size_gb IS awful OR ram_size_gb IS bad
                    THEN video_games IS awful;

     RULE 18 : IF ram_size_gb IS average
                    THEN video_games IS average;

     RULE 19 : IF ram_size_gb IS good OR ram_size_gb IS excellent
                    THEN video_games IS good;

     RULE 20 : IF ram_speed_mhz IS awful OR ram_speed_mhz IS bad
                    THEN video_games IS bad;

     RULE 21 : IF ram_speed_mhz IS average OR ram_speed_mhz IS good OR ram_speed_mhz IS excellent
               THEN video_games IS good;

     RULE 22 : IF storage_capacity_gb IS awful OR storage_capacity_gb IS bad
               THEN video_games IS bad;

     RULE 23 : IF storage_capacity_gb IS average
               THEN video_games IS average;

     RULE 24 : IF storage_capacity_gb IS good OR storage_capacity_gb IS excellent
              THEN video_games IS good;

     RULE 25 : IF power_supply_watts IS awful
               THEN video_games IS bad;
     RULE 26 : IF power_supply_watts IS bad
                    THEN video_games IS average;

     RULE 27 : IF power_supply_watts IS good OR power_supply_watts IS excellent
               THEN video_games IS good;

     RULE 28: IF (gpu_vram_size_gb IS awful OR gpu_vram_size_gb IS bad) AND
                 (cpu_core_count IS good OR cpu_clock_speed_ghz IS good)
              THEN video_games IS bad;

     RULE 29: IF (gpu_clock_speed_mhz IS awful OR gpu_clock_speed_mhz IS bad)
              AND (gpu_vram_size_gb IS good OR gpu_vram_size_gb IS excellent)
              THEN video_games IS bad;

     RULE 30: IF (ram_size_gb IS awful OR ram_size_gb IS bad) AND
                 (cpu_core_count IS excellent OR cpu_clock_speed_ghz IS excellent)
              THEN video_games IS average;


END_RULEBLOCK

RULEBLOCK home_rules
    AND : MIN;
    ACT : MIN;
    ACCU : MAX;

     RULE 1 : IF cpu_core_count IS bad
                            AND (gpu_clock_speed_mhz IS average OR gpu_clock_speed_mhz IS bad)
                            THEN home IS good;


     RULE 2 : IF cpu_clock_speed_ghz IS good OR cpu_clock_speed_ghz IS average
              THEN home IS good;

     RULE 3 : IF cpu_core_count IS bad
           THEN home IS average;

     RULE 4 : IF cpu_core_count IS excellent
              THEN home IS bad;

     RULE 5 : IF cpu_core_count IS average
               THEN home IS good;

     RULE 6 : IF cpu_core_count IS good
                    THEN home IS excellent;

     RULE 7 : IF cpu_thread_count IS bad OR cpu_thread_count IS average OR cpu_thread_count IS good
              THEN home IS good;

     RULE 8 : IF cpu_thread_count IS excellent
              THEN home IS bad;

     RULE 7 : IF gpu_vram_size_gb IS awful OR gpu_vram_size_gb IS good
               THEN home IS average;

     RULE 8 : IF gpu_vram_size_gb IS average OR gpu_vram_size_gb IS bad
               THEN home IS good;

     RULE 9: IF gpu_vram_size_gb IS excellent
               THEN home IS awful;

     RULE 10 : IF gpu_clock_speed_mhz IS good OR gpu_clock_speed_mhz IS bad
               THEN home IS good;

 RULE 11 : IF gpu_clock_speed_mhz IS average
               THEN home IS excellent;

     RULE 12 : IF gpu_clock_speed_mhz IS awful
               THEN home IS average;

     RULE 13 : IF gpu_clock_speed_mhz IS excellent
                    THEN home IS awful;

     RULE 14 : IF power_supply_watts IS bad OR power_supply_watts IS good
               THEN home IS good;

     RULE 15 : IF power_supply_watts IS average
               THEN home IS excellent;

     RULE 16 : IF power_supply_watts IS excellent
               THEN home IS bad;

     RULE 17 : IF ram_size_gb IS awful OR ram_size_gb IS excellent
               THEN home IS bad;

     RULE 18 : IF ram_size_gb IS average
               THEN home IS good;

     RULE 19 : IF ram_size_gb IS bad
               THEN home IS average;

     RULE 20 : IF ram_size_gb IS good
               THEN home IS excellent;

     RULE 21 : IF ram_speed_mhz IS awful OR ram_speed_mhz IS bad
                    THEN home IS average;

          RULE 22 : IF ram_speed_mhz IS average OR ram_speed_mhz IS good
                    THEN home IS good;

          RULE 23 : IF ram_speed_mhz IS excellent
                    THEN home IS bad;

          RULE 24: IF storage_capacity_gb IS awful
                   THEN home IS bad;

          RULE 25: IF storage_capacity_gb IS bad
                   THEN home IS average;

   RULE 26: IF storage_capacity_gb IS average OR storage_capacity_gb IS good
               THEN home IS good;

    RULE 27: IF cpu_clock_speed_ghz IS average
               AND (gpu_clock_speed_mhz IS good OR gpu_clock_speed_mhz IS excellent)
               THEN home IS average;

    RULE 28: IF power_supply_watts IS average AND ram_size_gb IS good
                   THEN home IS excellent;

     RULE 29: IF cpu_core_count IS average
              AND (gpu_vram_size_gb IS average OR gpu_vram_size_gb IS good)
              AND (power_supply_watts IS bad OR power_supply_watts IS average)
              THEN home IS good;

    RULE 30: IF  power_supply_watts IS average
             and (ram_size_gb IS excellent
             OR ram_size_gb IS awful)
             THEN home IS average;



END_RULEBLOCK

END_FUNCTION_BLOCK